#include<bits/stdc++.h>

using namespace std;


class Box { 
public:

int l,b,h;

    Box(){
        l =0;
        b=0;
        h=0;
    }
    Box(int l,int h,int b)  {
        l =l;
        b=b;
        h=h;
    }  

    Box(Box &B){
        l=B.l;
        b=B.b;
        h=B.h;
    }


int getLength(){ return l;} // Return box's length
int getBreadth(){ return b;} // Return box's breadth
int getHeight(){ return h; } //Return box's height


long long CalculateVolume() {
    // Return the volume of the box
    return l*b*h;
}

//Overload operator < as specified
bool operator<(Box& B){
      if(l<B.l)
        return true;
      else if(b<B.b){
        if(l ==B.l)
        return true;
      }
      else if(h<B.h){
        if(l ==B.l && b == B.b)
        return true;
      }

}

//Overload operator << as specified
ostream &operator<<(ostream &out, Box &B){
    out << B.getLength() << " " << B.getBreadth() << " " B.getHeight();
}


};


void check2()
{
	int n;
	cin>>n;
	Box temp;
	for(int i=0;i<n;i++)
	{
		int type;
		cin>>type;
		if(type ==1)
		{
			cout<<temp<<endl;
		}
		if(type == 2)
		{
			int l,b,h;
			cin>>l>>b>>h;
			Box NewBox(l,b,h);
			temp=NewBox;
			cout<<temp<<endl;
		}
		if(type==3)
		{
			int l,b,h;
			cin>>l>>b>>h;
			Box NewBox(l,b,h);
			if(NewBox<temp)
			{
				cout<<"Lesser\n";
			}
			else
			{
				cout<<"Greater\n";
			}
		}
		if(type==4)
		{
			cout<<temp.CalculateVolume()<<endl;
		}
		if(type==5)
		{
			Box NewBox(temp);
			cout<<NewBox<<endl;
		}

	}
}

int main()
{
	check2();
}
